{"version":3,"sources":["components/MapLegend.js","components/MapVisualizer.js"],"names":["MapLegend","data","statistic","mapViz","mapScale","t","useTranslation","svgRef","useRef","useMeasure","wrapperRef","width","height","useEffect","svg","select","current","statisticConfig","STATISTIC_CONFIGS","MAP_VIZS","BUBBLES","transition","duration","D3_TRANSITION_DURATION","attr","selectAll","remove","text","domain","domainMax","legend","legendRadius","map","d","join","yScale","copy","range","call","axisRight","tickSize","tickPadding","tickValues","tickFormat","num","formatNumber","format","style","g","color","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","x","tickAdjust","interpolate","n","Math","min","length","rangeRound","quantize","ramp","toDataURL","interpolator","Object","assign","interpolateRound","undefined","round","i","quantile","invertExtent","thresholds","quantiles","thresholdFormat","scaleLinear","append","widthScale","reduce","a","b","xPos","w","slice","acc","scaleOrdinal","enter","scaleBand","filter","max","bandwidth","axisBottom","on","node","mapConfig","colorScale","CHOROPLETH","Number","isInteger","className","MAP_LEGEND_HEIGHT","ref","id","preserveAspectRatio","position","canvas","context","getContext","fillStyle","fillRect","MapVisualizer","mapCode","isDistrictView","regionHighlighted","setRegionHighlighted","getMapStatistic","transformStatistic","mapMeta","MAP_META","history","useHistory","geoData","useSWR","geoDataFile","file","json","suspense","revalidateOnFocus","statisticTotal","useMemo","strokeColor","useCallback","alpha","features","mapType","MAP_TYPES","COUNTRY","feature","objects","states","districts","district","properties","state","st_nm","obj","districtsSet","stateCodes","stateCode","STATE_CODES","Set","add","keys","includes","districtData","res","districtName","has","UNKNOWN_DISTRICT_KEY","push","extent","statisticMin","statisticMax","scaleSqrt","clamp","nice","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","category","interpolatePiYG","colorInterpolator","fillColor","stateData","populateTexts","regionSelection","nonLinear","toTitleCase","onceTouchedRegion","path","geoPath","geoIdentity","T","event","update","exit","stopPropagation","STATE","window","innerWidth","sel","bind","circlesData","value","sort","featureA","featureB","centroid","requestIdleCallback","meshStates","meshDistricts","mesh","stateName","STATE_NAMES","each","highlighted","this","parentNode","appendChild","classnames","zone","viewBox","colorInterpolationFilters","type","values"],"mappings":"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","file":"static/js/43.af97f012.chunk.js","sourcesContent":["import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_VIZS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {formatNumber} from '../utils/commonFunctions';\n\nimport {range, quantile} from 'd3-array';\nimport {axisRight, axisBottom} from 'd3-axis';\nimport {format} from 'd3-format';\nimport {interpolate, interpolateRound, quantize} from 'd3-interpolate';\nimport {scaleLinear, scaleOrdinal, scaleBand} from 'd3-scale';\nimport {select} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\nfunction MapLegend({data, statistic, mapViz, mapScale}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n  const [wrapperRef, {width, height}] = useMeasure();\n\n  useEffect(() => {\n    if (!width || !height) return;\n\n    const svg = select(svgRef.current);\n    const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *:not(.axistext)').remove();\n      svg.select('.axistext').text('');\n\n      const [, domainMax] = mapScale.domain();\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      const legendRadius = [0.1, 0.4, 1].map((d) => d * domainMax);\n\n      legend\n        .selectAll('circle')\n        .data(legendRadius)\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues(legendRadius)\n            .tickFormat((num) =>\n              formatNumber(\n                num,\n                statisticConfig.format === 'long'\n                  ? 'short'\n                  : statisticConfig.format\n              )\n            )\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (statisticConfig?.mapConfig?.colorScale) {\n              return d;\n            } else if (mapViz === MAP_VIZS.CHOROPLETH && !Number.isInteger(d)) {\n              return '';\n            } else if (i === n.length - 1) {\n              return formatNumber(d, statisticConfig.format) + '+';\n            } else {\n              return formatNumber(d, statisticConfig.format);\n            }\n          },\n          marginLeft: 2,\n          marginRight: 0,\n        })\n      );\n      svg.attr('class', statisticConfig?.mapConfig?.colorScale ? 'zone' : '');\n    }\n  }, [t, width, height, statistic, mapScale, mapViz]);\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{height: MAP_LEGEND_HEIGHT}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n  svg\n    .select('.circles')\n    .selectAll('circle')\n    .transition(t)\n    .attr('r', 0)\n    .attr('cy', 0)\n    .remove();\n  svg.selectAll('.circleAxis > *').remove();\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(quantize(interpolate(marginLeft, width - marginRight), n));\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(color.copy().domain(quantize(interpolate(0, 1), n))).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = range(n).map((i) => quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? format(tickFormat)\n        : tickFormat;\n\n    x = scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = scaleBand()\n        .domain(color.domain().filter((d) => d))\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain().filter((d) => d))\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, toTitleCase} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {extent} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleSqrt, scaleSequential} from 'd3-scale';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n  interpolatePiYG,\n} from 'd3-scale-chromatic';\nimport {select} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport {feature, mesh} from 'topojson-client';\n\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = (statistic) => {\n  if (statistic === 'confirmed') {\n    return (t) => interpolateReds(t * 0.85);\n  } else if (statistic === 'active') {\n    return (t) => interpolateBlues(t * 0.85);\n  } else if (statistic === 'recovered') {\n    return (t) => interpolateGreens(t * 0.85);\n  } else if (statistic === 'deceased') {\n    return (t) => interpolateGreys(t * 0.85);\n  } else if (statistic === 'tested') {\n    return (t) => interpolatePurples(t * 0.85);\n  } else if (\n    statistic === 'tpr' ||\n    statistic === 'cfr' ||\n    statistic === 'other'\n  ) {\n    return (t) => interpolateOranges(t * 0.85);\n  } else if (STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') {\n    return (t) => interpolatePiYG(0.15 + 0.35 * (1 - t));\n  } else {\n    return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nfunction MapVisualizer({\n  mapCode,\n  isDistrictView,\n  mapViz,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  getMapStatistic,\n  transformStatistic,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await json(file);\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticTotal = useMemo(() => {\n    return getMapStatistic(data[mapCode]);\n  }, [data, mapCode, getMapStatistic]);\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  const strokeColor = useCallback(\n    (alpha) => (statisticConfig?.color || '#343a40') + alpha,\n    [statisticConfig]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n\n    const featuresWrap = !isDistrictView\n      ? feature(geoData, geoData.objects.states).features\n      : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz === MAP_VIZS.BUBBLES\n      ? [\n          ...feature(geoData, geoData.objects.states).features,\n          ...feature(geoData, geoData.objects.districts).features,\n        ]\n      : feature(geoData, geoData.objects.districts).features;\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, isDistrictView, mapViz, mapMeta]);\n\n  const districtsSet = useMemo(() => {\n    if (!geoData || !isDistrictView) return {};\n    return feature(geoData, geoData.objects.districts).features.reduce(\n      (stateCodes, feature) => {\n        const stateCode = STATE_CODES[feature.properties.st_nm];\n        if (!stateCodes[stateCode]) {\n          stateCodes[stateCode] = new Set();\n        }\n        stateCodes[stateCode].add(feature.properties.district);\n        return stateCodes;\n      },\n      {}\n    );\n  }, [geoData, isDistrictView]);\n\n  const [statisticMin, statisticMax] = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    if (!isDistrictView) {\n      return extent(stateCodes, (stateCode) =>\n        transformStatistic(getMapStatistic(data[stateCode]))\n      );\n    } else {\n      const districtData = stateCodes.reduce((res, stateCode) => {\n        const districts = Object.keys(data[stateCode]?.districts || []).filter(\n          (districtName) =>\n            (districtsSet?.[stateCode] || new Set()).has(districtName) ||\n            (mapViz === MAP_VIZS.BUBBLES &&\n              districtName === UNKNOWN_DISTRICT_KEY)\n        );\n        res.push(\n          ...districts.map((districtName) =>\n            transformStatistic(\n              getMapStatistic(data[stateCode].districts[districtName])\n            )\n          )\n        );\n        return res;\n      }, []);\n      return extent(districtData);\n    }\n  }, [\n    data,\n    isDistrictView,\n    getMapStatistic,\n    mapViz,\n    districtsSet,\n    transformStatistic,\n  ]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      return scaleSqrt([0, Math.max(1, statisticMax || 0)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else if (STATISTIC_CONFIGS[statistic]?.mapConfig?.colorScale) {\n      return STATISTIC_CONFIGS[statistic].mapConfig.colorScale;\n    } else {\n      return scaleSequential(\n        [Math.min(0, statisticMin || 0), Math.max(1, statisticMax || 0)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMin, statisticMax]);\n\n  const fillColor = useCallback(\n    (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      const n = transformStatistic(\n        getMapStatistic(district ? districtData : stateData)\n      );\n      const color = n ? mapScale(n) : '#ffffff00';\n      return color;\n    },\n    [data, mapScale, getMapStatistic, transformStatistic]\n  );\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz === MAP_VIZS.BUBBLES && !statisticConfig?.nonLinear) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getMapStatistic(districtData);\n          else n = getMapStatistic(stateData);\n          return `${formatNumber(\n            100 * (n / (statisticTotal || 0.001)),\n            '%'\n          )} from ${toTitleCase(district ? district : state)}`;\n        }\n      });\n    },\n    [mapViz, data, getMapStatistic, statisticTotal, statisticConfig]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz !== MAP_VIZS.BUBBLES ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (event, d) => {\n              if (onceTouchedRegion.current) return;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .on('pointerdown', (event, d) => {\n              if (onceTouchedRegion.current === d)\n                onceTouchedRegion.current = null;\n              else onceTouchedRegion.current = d;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('click', (event, d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  // Bubble\n  useEffect(() => {\n    if (!features) return;\n\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let circlesData = [];\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      circlesData = features\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (!isDistrictView) {\n            feature.value = getMapStatistic(stateData);\n          } else {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName) feature.value = getMapStatistic(districtData);\n            else\n              feature.value = getMapStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY]\n              );\n          }\n\n          return feature;\n        })\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n\n    const regionSelection = svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (feature) => feature.id)\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (event, feature) => {\n        if (onceTouchedRegion.current) return;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('pointerdown', (event, feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('click', (event, feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', statisticConfig.color + '70')\n          .attr('stroke', statisticConfig.color + '70')\n          .attr('r', (feature) => mapScale(feature.value));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    isDistrictView,\n    data,\n    features,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    populateTexts,\n    statisticConfig,\n    getMapStatistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (isDistrictView && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    isDistrictView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLES) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    isDistrictView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          className={classnames({\n            zone: !!statisticConfig?.mapConfig?.colorScale,\n          })}\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getMapStatistic(\n            data[mapCode]?.districts?.[UNKNOWN_DISTRICT_KEY]\n          ) && (\n            <div className={classnames('disclaimer', `is-${statistic}`)}>\n              <AlertIcon />\n              <span>\n                {t('District-wise data not available in state bulletin')}\n              </span>\n            </div>\n          )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, statistic, mapViz, mapScale}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  );\n}\n\nexport default MapVisualizer;\n"],"sourceRoot":""}